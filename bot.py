import logging
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = "8081060276:AAER7c-zg47MsVVGJM-ZqnNl_CIUQ3_JN88"
CHANNEL_ID = "-1003016125655"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

async def check_subscription(user_id, bot):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª"""
    try:
        chat_member = await bot.get_chat_member(CHANNEL_ID, user_id)
        return chat_member.status in ['member', 'administrator', 'creator']
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –∫–∞–Ω–∞–ª–∞"""
    keyboard = [
        [InlineKeyboardButton("üéÅ –ó–∞–±—Ä–∞—Ç—å –≥–∞–π–¥", callback_data="get_guide")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üìö –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≥–∞–π–¥—É:",
        reply_markup=reply_markup
    )

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    is_subscribed = await check_subscription(user_id, context.bot)
    
    if not is_subscribed:
        # –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω
        keyboard = [
            [InlineKeyboardButton("üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url="https://t.me/nellly_psy")],
            [InlineKeyboardButton("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="get_guide")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            "‚ùå –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥, –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª!\n\n"
            "–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É':",
            reply_markup=reply_markup
        )
    else:
        # –ü–æ–¥–ø–∏—Å–∞–Ω - –≤—ã–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
        await query.edit_message_text(
            "‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã! –ì–∞–π–¥ –¥–æ—Å—Ç—É–ø–µ–Ω!\n\n"
            "üìö –°—Å—ã–ª–∫–∞ –Ω–∞ –≥–∞–π–¥ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–æ—Å—Ç–µ –Ω–∞–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º\n\n"
            "–ù–∞–π–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –≤ —Ç–µ–∫—Å—Ç–µ –ø–æ—Å—Ç–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–µ!",
            reply_markup=None
        )

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    application = Application.builder().token(BOT_TOKEN).build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_handler))
    
    application.run_polling()

if __name__ == "__main__":
    main()
